version: '3.7'
services:

  ros1_core:
    image: test:ros1_bridge
    container_name: ros1_core
    networks:
        - test-bridge-network 
    environment:
        - ROS_MASTER_URI=http://ros1_core:11311
    command: bash -c "source /ros1_ws/devel_isolated/setup.bash && roscore"
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix   

  ros2_usbcam:
    image: test:ros2_usbcam_show 
    container_name: ros2_usbcam
    networks:
      - test-bridge-network
    environment:
      - ROS_DOMAIN_ID=2
    devices:
      - /dev/video0:/dev/video0
    command: bash -c "source /opt/ros/humble/setup.bash && ros2 run image_tools cam2image"
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix   


  ros1_bridge:
    image: test:ros1_bridge
    container_name: ros1_bridge
    networks:
        - test-bridge-network 
    environment:
        - ROS_DOMAIN_ID=2
        - ROS_MASTER_URI=http://ros1_core:11311
        - ROS1_INSTALL_PATH=/ros1_ws/devel_isolated
        - ROS2_INSTALL_PATH=/ros2_ws/install
    command: bash -c "cd /ros1_bridge/ && source /ros1_ws/devel_isolated/setup.bash && source /ros1_bridge/install/setup.bash && ros2 run ros1_bridge dynamic_bridge"
    depends_on:
      - ros1_core
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix   

  ros1_image_show:
    image: test:ros1_usbcam_show 
    container_name: ros1_image_show
    networks:
      - test-bridge-network
    environment:
      - ROS_MASTER_URI=http://ros1_core:11311
      - DISPLAY=${DISPLAY} 
    command: bash -c "sleep 2 && source /opt/ros/noetic/setup.bash  && rosrun rqt_image_view rqt_image_view /image"
    depends_on:
      - ros1_core
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix    


networks:
  test-bridge-network:
    driver: bridge  